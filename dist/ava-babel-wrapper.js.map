{"version":3,"file":"ava-babel-wrapper.js","sources":["../src/utils.js","../src/wrapper/defaultErrorHandler.js","../src/results/Failure.js","../src/results/Success.js","../src/results/Result.js","../src/function/parse.js","../src/function/validate.js","../src/function/command.js","../src/function/getFunction.js","../src/messages/CompileError.js","../src/messages/RuntimeError.js","../src/messages/ErrorMessage.js","../src/wrapper/wrap.js","../src/index.js"],"sourcesContent":["export const id = x => x;\nexport const loose = f => x => f(x) || x;\nexport const compose = (f, g) => x => f(g(x));\nexport const pipe = (...fs) => fs.reduceRight(compose, id);\nexport const either = p => l => r => x => p(x) ? r(x) : l(x);\nexport const _ = (f, x) => (...xs) => f(x, ...xs);\n\nexport const _$ = method => (...args) => a => a[method](...args);\nexport const $ = (x, ...xs) =>\n    !xs.length\n    ? _$(x)\n    : Object.fromEntries(\n        [x, ...xs].map(key => [key, _$(key)])\n    )\n;\n\nexport const stringify = x => JSON.stringify(x, null, '  ');","const unescapeLideFeed = str => str.replace(/\\\\n/g, '\\n')\n\nexport default (t, e) => {\n    e && t.fail(unescapeLideFeed(e))\n};\n","export default (ErrorMessage, { reject }) => error =>\n    reject(ErrorMessage({ type: 'compile-time', error }))\n;","export default (ErrorMessage, { execute, reject }) => result => {\n    try {\n        execute(result.code);\n    } catch (error) {\n        reject(ErrorMessage({ type: 'run-time', result, error }));\n    }\n}\n","import failure from './Failure.js'\nimport success from './Success.js'\n\nexport default ErrorMessage => descriptor =>\n    ({ success, failure })[descriptor.type](ErrorMessage, descriptor)\n;\n","import { id, pipe, loose, either, $ } from '../utils';\nconst { map, filter, split, lastIndexOf, indexOf, toString } = $('map', 'filter', 'split', 'lastIndexOf', 'indexOf', 'toString');\n\nconst subBounds = rightFn => left => right => str => {\n    const numOr = either(x => typeof x !== 'number')(id)\n    const start = numOr(x => str.indexOf(x) + 1);\n    const end = numOr(x => rightFn(x)(str));\n    return str.substring(start(left), end(right));\n};\n\nconst subExtremes = subBounds(lastIndexOf);\nconst subBetween = subBounds(indexOf);\nconst subBefore = subBounds(indexOf)(0)\n\nconst getFunctionBody = subExtremes('{')('}');\n\nconst getFunctionParameters = pipe(\n    loose(subBefore('{')),\n    loose(subBefore('=>')),\n    loose(subBetween('(')(')')),\n    split(','),\n    map(x => x.trim()),\n    filter(x => x !== '()')\n);\n\nexport default pipe(\n    toString(null),\n    str => [getFunctionParameters(str), getFunctionBody(str)]\n);","export default ({ params, max }) => {\n    if (params.length > max) {\n        const n = params.length;\n        const list = params.map(x => `\"${x}\"`).join(', ');\n        throw Error(`test function expected a maximum of ${max} arguments, got ${n}: ${list}`);\n    }\n};\n","import { $ } from '../utils';\nconst map = $('map');\n\nconst assoc = store => map((_, i) => store[i])\n\nexport default (paramNames, scope) => utils => code => {\n    const paramValues = assoc([utils, code])(paramNames)\n    const scopeNames = Object.keys(scope);\n    const scopeValues = Object.values(scope);\n    const params = [...paramNames, ...scopeNames];\n    const args = [...paramValues, ...scopeValues];\n    new Function(params, code)(...args);\n};\n","import parse from './parse';\nimport validate from './validate';\nimport command from './command';\n\nexport default (func, scope) => {\n    const [params, body] = parse(func);\n    validate({ params, max: 2 });\n    return { command: command(params, scope), body, params };\n};\n","import { pipe, stringify, $ } from '../utils';\nconst { slice, join, replace } = $('slice', 'join', 'replace');\n\n\nconst isCodeFrameError = lines =>\n    lines.length && lines.slice(1).every(x => x.includes(' |'))\n;\n\nconst extractCodeFrame = pipe(slice(1), join('\\n'), x => '\\n' + x);\n\nconst cleanup = replace('unknown: ', '');\n\nconst babelError = e => {\n    const message = cleanup(e.message || e);\n    const lines = message.split('\\n');\n\n    return isCodeFrameError(lines)\n        ? { message: lines[0], codeFrame: extractCodeFrame(lines) }\n        : { message }\n};\n\nexport default ({ error }) => stringify({\n    type: 'compile-time error',\n    ...babelError(error)\n});\n","import { pipe, stringify, $ } from '../utils'\n\nconst format = pipe(\n    $('split')('\\n'),\n    $('map')(x => '     ' + x),\n    $('join')('\\n'),\n    x => '\\n' + x\n);\n\nexport default({ result, error }) => stringify({\n    type: 'run-time error',\n    message: error.message || error,\n    babelOutput: format(result.code)\n});\n","import CompileError from './CompileError';\nimport RuntimeError from './RuntimeError';\n\nexport default descriptor =>\n  ({'compile-time': CompileError,\n    'run-time': RuntimeError\n  })[descriptor.type](descriptor)\n;\n","import babel from '@babel/core';\nimport defaultHandler from './defaultErrorHandler.js'\nimport ResultFactory from '../results/Result.js';\nimport parse from '../function/getFunction.js';\nimport ErrorMessage from '../messages/ErrorMessage.js';\nimport { _ } from '../utils.js';\n\nconst Result = ResultFactory(ErrorMessage);\n\nexport default (plugins, scope) => runner => (title, test, reject = defaultHandler) => {\n    const { body, command } = parse(test, scope);\n\n    runner(title, t =>\n        babel.transformAsync(body, { plugins })\n        .then(\n            Result({\n                type: 'success',\n                execute: command(t),\n                reject: _(reject, t)\n            }),\n            Result({\n                type: 'failure',\n                reject: _(reject, t)\n            })\n        )\n    );\n};\n","import ava from 'ava';\nimport { pipe, $ } from './utils';\nimport wrapFactory from './wrapper/wrap.js';\n\nconst map = $('map');\n\nconst wrapWith = factory => pipe(\n    map(key => [key, factory(ava[key])]),\n    Object.fromEntries\n);\n\nexport default (plugins = [], scope = {}) => {\n    const wrap = wrapFactory(plugins, scope);\n    const modifiers = wrapWith(wrap)(['only', 'failing', 'serial']);\n    const test = Object.assign(wrap(ava), ava, modifiers)\n    return test;\n};\n"],"names":["map","parse","babel","ava"],"mappings":"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"}