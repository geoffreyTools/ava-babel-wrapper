{"version":3,"file":"ava-babel-wrapper.mjs","sources":["../src/utils.js","../src/parseFunction.js","../src/executable.js","../src/errorMessage.js","../src/index.js"],"sourcesContent":["export const id = x => x;\nexport const loose = f => x => f(x) || x;\nexport const compose = (f, g) => x => f(g(x));\nexport const pipe = (...fs) => fs.reduceRight(compose, id);\nexport const either = p => l => r => x => p(x) ? r(x) : l(x);\n\nexport const $ = method => arg => a => a[method](arg);\nexport const map = $('map');\nexport const split = $('split');\nexport const join = $('join');","import { id, pipe, loose, either, $, map, split } from './utils'\n\nconst subBounds = rightFn => left => right => str => {\n    const numOr = either(x => typeof x !== 'number')(id)\n    const start = numOr(x => str.indexOf(x) + 1);\n    const end = numOr(x => rightFn(x)(str));\n    return str.substring(start(left), end(right));\n};\n\nconst subExtremes = subBounds($('lastIndexOf'));\nconst subBetween = subBounds($('indexOf'));\nconst subBefore = subBounds($('indexOf'))(0)\n\nconst getFunctionBody = subExtremes('{')('}');\n\nconst getFunctionParameters = pipe(\n    loose(subBefore('{')),\n    loose(subBefore('=>')),\n    loose(subBetween('(')(')')),\n    split(','),\n    map(x => x.trim())\n);\n\nexport default pipe(\n    $('toString')(),\n    str => [getFunctionParameters(str), getFunctionBody(str)]\n);","import { map } from './utils';\n\nconst assoc = store => map((_, i) => store[i])\n\nexport default (paramNames, scope, t) => code => {\n    const paramValues = assoc([t, code])(paramNames)\n    const scopeNames = Object.keys(scope);\n    const scopeValues = Object.values(scope);\n    const params = [...paramNames, ...scopeNames];\n    const args = [...paramValues, ...scopeValues];\n    new Function(params, code)(...args);\n};","import { pipe, map, split, join} from './utils'\n\nconst indent = n => pipe(\n    split('\\n'),\n    map(x => '   '.repeat(n) + x),\n    join('\\n')\n);\n\nconst escape = char => str =>\n    str.replace(new RegExp(char, 'g'), '\\\\' + char)\n;\n\nconst formatCode = pipe(escape('\"'), indent(2), x => '\\n' + x);\n\nconst formatIf = key => obj =>\n    !obj[key]\n    ? obj\n    : { ...obj, [key]: formatCode(obj[key]) }\n;\n\nexport default pipe(\n    formatIf('babelOutput'),\n    Object.entries,\n    map(([key, value]) => `\\n  \"${key}\": \"${value}\"`),\n    join(','),\n    json => '{' + json + '\\n}'\n);","import babel from '@babel/core';\nimport ava from 'ava';\nimport parseFunction from './parseFunction';\nimport executable from './executable';\nimport errorMessage from './errorMessage';\n\nconst test = (plugins, scope) => (title, test, reject = log) => {\n    const [params, body] = parseFunction(test);\n    const tooMany = maxParamsCount(2)(params);\n    if (tooMany) throw tooMany;\n\n    ava(title, t =>\n        babel.transformAsync(body, { plugins })\n        .then(success(t, executable(params, scope, t), reject))\n        .catch(failure(t, reject))\n    )\n};\n\nexport default (plugins = [], scope = {}) =>\n    Object.assign(test(plugins, scope), ava)\n;\n\nconst log = (t, e) => { t.fail(e) };\n\nconst maxParamsCount = max => params =>\n    params.length <= max\n    ? null\n    : new Error(`test function expected a maximum of ${max} arguments, got ${params.length}: ${params.map(x => `\"${x}\"`).join(', ')}`)\n;\n\nconst success = (t, execute, reject) => result => {\n    try {\n        execute(result.code);\n    } catch (e) {\n        const message = errorMessage({\n            type: 'run-time error',\n            message: e.message || e,\n            babelOutput: result.code\n        });\n\n        reject(t, message);\n    }\n}\n\nconst failure = (t, reject) => e => {\n    const message = errorMessage({\n        type: 'compile-time error',\n        message: e.message || e\n    });\n    reject(t, message);\n}"],"names":[],"mappings":"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"}